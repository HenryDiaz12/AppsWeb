{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport { ref } from 'vue';\nimport Notification from './AppNotification.vue';\nimport { provide } from 'vue';\nexport default {\n  __name: 'NotificationContainer',\n  setup(__props, {\n    expose: __expose\n  }) {\n    const notifications = ref([]);\n    const addNotification = (type, message) => {\n      const id = Date.now();\n      notifications.value.push({\n        id,\n        type,\n        message\n      });\n      setTimeout(() => {\n        removeNotification(id);\n      }, 5000);\n    };\n    const removeNotification = id => {\n      notifications.value = notifications.value.filter(n => n.id !== id);\n    };\n    provide('addNotification', addNotification);\n    __expose({\n      addNotification\n    });\n    const __returned__ = {\n      notifications,\n      addNotification,\n      removeNotification,\n      ref,\n      Notification,\n      provide\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","Notification","provide","notifications","addNotification","type","message","id","Date","now","value","push","setTimeout","removeNotification","filter","n","__expose"],"sources":["C:/Users/Henry/Desktop/GreenlogistApps-main/GreenlogistApps-main/src/components/NotificationContainer.vue"],"sourcesContent":["<template>\n  <div class=\"notification-container\">\n    <Notification\n      v-for=\"notification in notifications\"\n      :key=\"notification.id\"\n      :type=\"notification.type\"\n      :message=\"notification.message\"\n      @dismiss=\"removeNotification(notification.id)\"\n    />\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue'\nimport Notification from './AppNotification.vue'\n\nconst notifications = ref([])\n\n\nconst addNotification = (type, message) => {\n  const id = Date.now()\n  notifications.value.push({ id, type, message })\n  \n  setTimeout(() => {\n    removeNotification(id)\n  }, 5000)\n}\n\nconst removeNotification = (id) => {\n  notifications.value = notifications.value.filter(n => n.id !== id)\n}\n\n\nimport { provide } from 'vue'\nprovide('addNotification', addNotification)\n\n\ndefineExpose({\n  addNotification\n})\n</script>\n\n<style scoped>\n.notification-container {\n  position: fixed;\n  top: 1rem;\n  right: 1rem;\n  z-index: 1000;\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n}\n</style>"],"mappings":";;;AAaA,SAASA,GAAG,QAAQ,KAAI;AACxB,OAAOC,YAAY,MAAM,uBAAsB;AAmB/C,SAASC,OAAO,QAAQ,KAAI;;;;;;IAjB5B,MAAMC,aAAa,GAAGH,GAAG,CAAC,EAAE;IAG5B,MAAMI,eAAe,GAAGA,CAACC,IAAI,EAAEC,OAAO,KAAK;MACzC,MAAMC,EAAE,GAAGC,IAAI,CAACC,GAAG,CAAC;MACpBN,aAAa,CAACO,KAAK,CAACC,IAAI,CAAC;QAAEJ,EAAE;QAAEF,IAAI;QAAEC;MAAQ,CAAC;MAE9CM,UAAU,CAAC,MAAM;QACfC,kBAAkB,CAACN,EAAE;MACvB,CAAC,EAAE,IAAI;IACT;IAEA,MAAMM,kBAAkB,GAAIN,EAAE,IAAK;MACjCJ,aAAa,CAACO,KAAK,GAAGP,aAAa,CAACO,KAAK,CAACI,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACR,EAAE,KAAKA,EAAE;IACnE;IAIAL,OAAO,CAAC,iBAAiB,EAAEE,eAAe;IAG1CY,QAAY,CAAC;MACXZ;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}