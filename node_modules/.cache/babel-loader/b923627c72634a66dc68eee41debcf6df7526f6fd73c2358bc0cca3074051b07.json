{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport PasswordStrengthMeter from '@/components/PasswordStrengthMeter.vue';\nexport default {\n  __name: 'RegisterView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n\n    // Datos del formulario\n    const formData = ref({\n      fullName: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      acceptedTerms: false\n    });\n\n    // Estados\n    const isSubmitting = ref(false);\n    const authError = ref('');\n    const errors = ref({\n      fullName: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      acceptedTerms: ''\n    });\n\n    // Validaciones\n    const validateForm = () => {\n      let isValid = true;\n      errors.value = {\n        fullName: '',\n        email: '',\n        password: '',\n        confirmPassword: '',\n        acceptedTerms: ''\n      };\n\n      // Validar nombre\n      if (!formData.value.fullName.trim()) {\n        errors.value.fullName = 'El nombre completo es obligatorio';\n        isValid = false;\n      } else if (formData.value.fullName.trim().length < 3) {\n        errors.value.fullName = 'Mínimo 3 caracteres';\n        isValid = false;\n      }\n\n      // Validar email\n      if (!formData.value.email) {\n        errors.value.email = 'El correo es obligatorio';\n        isValid = false;\n      } else if (!/^\\S+@\\S+\\.\\S+$/.test(formData.value.email)) {\n        errors.value.email = 'Ingresa un correo válido';\n        isValid = false;\n      }\n\n      // Validar contraseña\n      if (!formData.value.password) {\n        errors.value.password = 'La contraseña es obligatoria';\n        isValid = false;\n      } else if (formData.value.password.length < 8) {\n        errors.value.password = 'Mínimo 8 caracteres';\n        isValid = false;\n      } else if (!/[A-Z]/.test(formData.value.password)) {\n        errors.value.password = 'Debe contener al menos una mayúscula';\n        isValid = false;\n      } else if (!/[0-9]/.test(formData.value.password)) {\n        errors.value.password = 'Debe contener al menos un número';\n        isValid = false;\n      }\n\n      // confirmación de contraseña\n      if (formData.value.password !== formData.value.confirmPassword) {\n        errors.value.confirmPassword = 'Las contraseñas no coinciden';\n        isValid = false;\n      }\n\n      //términos y condiciones\n      if (!formData.value.acceptedTerms) {\n        errors.value.acceptedTerms = 'Debes aceptar los términos y condiciones';\n        isValid = false;\n      }\n      return isValid;\n    };\n    const handleRegister = async () => {\n      if (!validateForm()) return;\n      isSubmitting.value = true;\n      authError.value = '';\n      try {\n        //aqui se puede usar api\n        const users = JSON.parse(localStorage.getItem('users')) || [];\n        const emailExists = users.some(user => user.email === formData.value.email);\n        if (emailExists) {\n          authError.value = 'Este correo ya está registrado';\n          return;\n        }\n\n        //aqui podemos integrar una api\n        users.push({\n          fullName: formData.value.fullName,\n          email: formData.value.email,\n          password: formData.value.password\n        });\n        localStorage.setItem('users', JSON.stringify(users));\n        router.push({\n          path: '/login',\n          query: {\n            registered: 'true'\n          }\n        });\n      } catch (error) {\n        console.error('Registration error:', error);\n        authError.value = 'Ocurrió un error al registrar. Intenta nuevamente.';\n      } finally {\n        isSubmitting.value = false;\n      }\n    };\n    const __returned__ = {\n      router,\n      formData,\n      isSubmitting,\n      authError,\n      errors,\n      validateForm,\n      handleRegister,\n      ref,\n      get useRouter() {\n        return useRouter;\n      },\n      PasswordStrengthMeter\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","useRouter","PasswordStrengthMeter","router","formData","fullName","email","password","confirmPassword","acceptedTerms","isSubmitting","authError","errors","validateForm","isValid","value","trim","length","test","handleRegister","users","JSON","parse","localStorage","getItem","emailExists","some","user","push","setItem","stringify","path","query","registered","error","console"],"sources":["C:/Users/Henry/Desktop/GreenlogistApps-main/GreenlogistApps-main/src/views/RegisterView.vue"],"sourcesContent":["<template>\n  <div class=\"auth-container\">\n    <div class=\"auth-card\">\n      <h1 class=\"auth-title\">Crear Cuenta</h1>\n      \n      <form @submit.prevent=\"handleRegister\" class=\"auth-form\" novalidate>\n  \n        <div class=\"form-group\">\n          <label for=\"fullName\" class=\"form-label\">Nombre completo</label>\n          <input\n            type=\"text\"\n            id=\"fullName\"\n            v-model.trim=\"formData.fullName\"\n            required\n            autocomplete=\"name\"\n            class=\"form-input\"\n            :class=\"{ 'input-error': errors.fullName }\"\n          />\n          <span v-if=\"errors.fullName\" class=\"error-text\">{{ errors.fullName }}</span>\n        </div>\n\n   \n        <div class=\"form-group\">\n          <label for=\"email\" class=\"form-label\">Correo electrónico</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            v-model.trim=\"formData.email\"\n            required\n            autocomplete=\"email\"\n            class=\"form-input\"\n            :class=\"{ 'input-error': errors.email }\"\n          />\n          <span v-if=\"errors.email\" class=\"error-text\">{{ errors.email }}</span>\n        </div>\n\n       \n        <div class=\"form-group\">\n          <label for=\"password\" class=\"form-label\">Contraseña</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            v-model.trim=\"formData.password\"\n            required\n            autocomplete=\"new-password\"\n            class=\"form-input\"\n            :class=\"{ 'input-error': errors.password }\"\n          />\n          <PasswordStrengthMeter \n            v-if=\"formData.password\"\n            :password=\"formData.password\"\n          />\n          <span v-if=\"errors.password\" class=\"error-text\">{{ errors.password }}</span>\n        </div>\n\n       \n        <div class=\"form-group\">\n          <label for=\"confirmPassword\" class=\"form-label\">Confirmar contraseña</label>\n          <input\n            type=\"password\"\n            id=\"confirmPassword\"\n            v-model.trim=\"formData.confirmPassword\"\n            required\n            autocomplete=\"new-password\"\n            class=\"form-input\"\n            :class=\"{ 'input-error': errors.confirmPassword }\"\n          />\n          <span v-if=\"errors.confirmPassword\" class=\"error-text\">{{ errors.confirmPassword }}</span>\n        </div>\n\n       \n        <div class=\"form-group terms-group\">\n          <input\n            type=\"checkbox\"\n            id=\"terms\"\n            v-model=\"formData.acceptedTerms\"\n            class=\"terms-checkbox\"\n          />\n          <label for=\"terms\" class=\"terms-label\">\n            Acepto los <a href=\"/terminos\" target=\"_blank\" class=\"terms-link\">Términos y Condiciones</a>\n          </label>\n          <span v-if=\"errors.acceptedTerms\" class=\"error-text\">{{ errors.acceptedTerms }}</span>\n        </div>\n\n        \n        <div v-if=\"authError\" class=\"auth-error\">\n          {{ authError }}\n        </div>\n\n     \n        <button type=\"submit\" class=\"auth-button\" :disabled=\"isSubmitting\">\n          <span v-if=\"!isSubmitting\">Registrarse</span>\n          <span v-else class=\"loading-indicator\">\n            <i class=\"fas fa-spinner fa-spin\"></i> Procesando...\n          </span>\n        </button>\n      </form>\n\n      <div class=\"auth-footer\">\n        ¿Ya tienes cuenta? \n        <router-link to=\"/login\" class=\"auth-link\">Inicia sesión</router-link>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue'\nimport { useRouter } from 'vue-router'\nimport PasswordStrengthMeter from '@/components/PasswordStrengthMeter.vue'\n\nconst router = useRouter()\n\n// Datos del formulario\nconst formData = ref({\n  fullName: '',\n  email: '',\n  password: '',\n  confirmPassword: '',\n  acceptedTerms: false\n})\n\n// Estados\nconst isSubmitting = ref(false)\nconst authError = ref('')\nconst errors = ref({\n  fullName: '',\n  email: '',\n  password: '',\n  confirmPassword: '',\n  acceptedTerms: ''\n})\n\n// Validaciones\nconst validateForm = () => {\n  let isValid = true\n  errors.value = { \n    fullName: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    acceptedTerms: ''\n  }\n\n  // Validar nombre\n  if (!formData.value.fullName.trim()) {\n    errors.value.fullName = 'El nombre completo es obligatorio'\n    isValid = false\n  } else if (formData.value.fullName.trim().length < 3) {\n    errors.value.fullName = 'Mínimo 3 caracteres'\n    isValid = false\n  }\n\n  // Validar email\n  if (!formData.value.email) {\n    errors.value.email = 'El correo es obligatorio'\n    isValid = false\n  } else if (!/^\\S+@\\S+\\.\\S+$/.test(formData.value.email)) {\n    errors.value.email = 'Ingresa un correo válido'\n    isValid = false\n  }\n\n  // Validar contraseña\n  if (!formData.value.password) {\n    errors.value.password = 'La contraseña es obligatoria'\n    isValid = false\n  } else if (formData.value.password.length < 8) {\n    errors.value.password = 'Mínimo 8 caracteres'\n    isValid = false\n  } else if (!/[A-Z]/.test(formData.value.password)) {\n    errors.value.password = 'Debe contener al menos una mayúscula'\n    isValid = false\n  } else if (!/[0-9]/.test(formData.value.password)) {\n    errors.value.password = 'Debe contener al menos un número'\n    isValid = false\n  }\n\n  // confirmación de contraseña\n  if (formData.value.password !== formData.value.confirmPassword) {\n    errors.value.confirmPassword = 'Las contraseñas no coinciden'\n    isValid = false\n  }\n\n  //términos y condiciones\n  if (!formData.value.acceptedTerms) {\n    errors.value.acceptedTerms = 'Debes aceptar los términos y condiciones'\n    isValid = false\n  }\n\n  return isValid\n}\n\nconst handleRegister = async () => {\n  if (!validateForm()) return\n\n  isSubmitting.value = true\n  authError.value = ''\n\n  try {\n//aqui se puede usar api\n    const users = JSON.parse(localStorage.getItem('users')) || []\n    \n\n    const emailExists = users.some(user => user.email === formData.value.email)\n    if (emailExists) {\n      authError.value = 'Este correo ya está registrado'\n      return\n    }\n\n//aqui podemos integrar una api\n    users.push({\n      fullName: formData.value.fullName,\n      email: formData.value.email,\n      password: formData.value.password \n    })\n\n    localStorage.setItem('users', JSON.stringify(users))\n\n \n    router.push({\n      path: '/login',\n      query: { registered: 'true' }\n    })\n  } catch (error) {\n    console.error('Registration error:', error)\n    authError.value = 'Ocurrió un error al registrar. Intenta nuevamente.'\n  } finally {\n    isSubmitting.value = false\n  }\n}\n</script>\n\n<style scoped>\n.auth-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  background-color: #f5f5f5;\n  padding: 1rem;\n}\n\n.auth-card {\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  padding: 2rem;\n  width: 100%;\n  max-width: 450px;\n}\n\n.auth-title {\n  color: #2E7D32;\n  text-align: center;\n  margin-bottom: 1.5rem;\n  font-size: 1.5rem;\n}\n\n.auth-form {\n  display: flex;\n  flex-direction: column;\n  gap: 1.25rem;\n}\n\n.form-group {\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n}\n\n.form-label {\n  font-weight: 500;\n  color: #333;\n}\n\n.form-input {\n  padding: 0.75rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 1rem;\n}\n\n.form-input:focus {\n  outline: none;\n  border-color: #2E7D32;\n  box-shadow: 0 0 0 2px rgba(46, 125, 50, 0.2);\n}\n\n.input-error {\n  border-color: #d32f2f;\n}\n\n.error-text {\n  color: #d32f2f;\n  font-size: 0.875rem;\n}\n\n.auth-error {\n  color: #d32f2f;\n  background-color: #fdecea;\n  padding: 0.75rem;\n  border-radius: 4px;\n  text-align: center;\n  margin-bottom: 0.5rem;\n}\n\n.terms-group {\n  flex-direction: row;\n  align-items: center;\n  gap: 0.75rem;\n  margin-top: 0.5rem;\n}\n\n.terms-checkbox {\n  width: 1rem;\n  height: 1rem;\n}\n\n.terms-label {\n  font-size: 0.875rem;\n  color: #555;\n}\n\n.terms-link {\n  color: #2E7D32;\n  text-decoration: none;\n}\n\n.terms-link:hover {\n  text-decoration: underline;\n}\n\n.auth-button {\n  background-color: #2E7D32;\n  color: white;\n  padding: 0.75rem;\n  border: none;\n  border-radius: 4px;\n  font-size: 1rem;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color 0.2s;\n  margin-top: 0.5rem;\n}\n\n.auth-button:hover {\n  background-color: #1B5E20;\n}\n\n.auth-button:disabled {\n  background-color: #81C784;\n  cursor: not-allowed;\n}\n\n.loading-indicator {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  gap: 0.5rem;\n}\n\n.auth-footer {\n  text-align: center;\n  margin-top: 1.5rem;\n  color: #666;\n}\n\n.auth-link {\n  color: #2E7D32;\n  font-weight: 500;\n  text-decoration: none;\n}\n\n.auth-link:hover {\n  text-decoration: underline;\n}\n\n@media (max-width: 480px) {\n  .auth-card {\n    padding: 1.5rem;\n  }\n  \n  .auth-title {\n    font-size: 1.25rem;\n  }\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}