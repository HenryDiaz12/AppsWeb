{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"notification-container\"\n};\nexport function render(_ctx, _cache) {\n  const _component_Notification = _resolveComponent(\"Notification\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.notifications, notification => {\n    return _openBlock(), _createBlock(_component_Notification, {\n      key: notification.id,\n      type: notification.type,\n      message: notification.message,\n      onDismiss: $event => _ctx.removeNotification(notification.id)\n    }, null, 8 /* PROPS */, [\"type\", \"message\", \"onDismiss\"]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_Fragment","_renderList","_ctx","notifications","notification","_createBlock","_component_Notification","key","id","type","message","onDismiss","$event","removeNotification"],"sources":["C:\\Users\\Henry\\Desktop\\GreenlogistApps-main\\GreenlogistApps-main\\src\\components\\NotificationContainer.vue"],"sourcesContent":["<template>\n  <div class=\"notification-container\">\n    <Notification\n      v-for=\"notification in notifications\"\n      :key=\"notification.id\"\n      :type=\"notification.type\"\n      :message=\"notification.message\"\n      @dismiss=\"removeNotification(notification.id)\"\n    />\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue'\nimport Notification from './Notification.vue' \n\nconst notifications = ref([])\n\nconst addNotification = (type, message) => {\n  const id = Date.now()\n  notifications.value.push({ id, type, message })\n  \n  setTimeout(() => {\n    removeNotification(id)\n  }, 5000)\n}\n\nconst removeNotification = (id) => {\n  notifications.value = notifications.value.filter(n => n.id !== id)\n}\n\nexport { addNotification }\n</script>\n\n<style scoped>\n.notification-container {\n  position: fixed;\n  top: 1rem;\n  right: 1rem;\n  z-index: 1000;\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n}\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAwB;;;uBAAnCC,mBAAA,CAQM,OARNC,UAQM,I,kBAPJD,mBAAA,CAMEE,SAAA,QARNC,WAAA,CAG6BC,IAAA,CAAAC,aAAa,EAA7BC,YAAY;yBADrBC,YAAA,CAMEC,uBAAA;MAJCC,GAAG,EAAEH,YAAY,CAACI,EAAE;MACpBC,IAAI,EAAEL,YAAY,CAACK,IAAI;MACvBC,OAAO,EAAEN,YAAY,CAACM,OAAO;MAC7BC,SAAO,EAAAC,MAAA,IAAEV,IAAA,CAAAW,kBAAkB,CAACT,YAAY,CAACI,EAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}