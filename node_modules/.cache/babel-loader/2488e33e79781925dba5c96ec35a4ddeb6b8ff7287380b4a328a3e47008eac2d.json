{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport { createRouter, createWebHistory } from 'vue-router';\nimport LoginView from '@/views/LoginView.vue'; // \nimport RegisterView from '@/views/RegisterView.vue';\nimport DashboardView from '@/views/DashboardView.vue';\nimport RegistroProducto from '@/views/RegistroProducto.vue';\nimport ProducerView from '@/views/perfil.vue'; //\nimport EstadisticasView from '@/views/estadisticas.vue'; //\nimport ProductoresDashboard from '@/views/ProductoresDashboard.vue';\nconst routes = [{\n  path: '/',\n  redirect: '/login'\n}, {\n  path: '/login',\n  name: 'Login',\n  component: LoginView,\n  meta: {\n    title: 'Iniciar Sesión',\n    guestOnly: true // Nueva meta para rutas que no deben mostrarse cuando hay sesión\n  }\n}, {\n  path: '/register',\n  name: 'Register',\n  component: RegisterView,\n  meta: {\n    title: 'Registro',\n    guestOnly: true\n  }\n}, {\n  path: '/dashboard',\n  name: 'Dashboard',\n  component: DashboardView,\n  meta: {\n    requiresAuth: true,\n    title: 'Panel Principal'\n  }\n}, {\n  path: '/registrar-producto',\n  name: 'RegistroProducto',\n  component: RegistroProducto,\n  meta: {\n    requiresAuth: true,\n    title: 'Registrar Producto'\n  }\n}, {\n  path: '/productoresdashboard',\n  name: 'ProductoresDashboard',\n  component: ProductoresDashboard,\n  meta: {\n    requiresAuth: true,\n    title: 'Panel de Productores'\n  }\n}, {\n  path: '/producer',\n  name: 'Producer',\n  component: ProducerView,\n  meta: {\n    requiresAuth: true,\n    title: 'Perfil del Productor'\n  }\n}, {\n  path: '/panel-estadisticas',\n  name: 'Estadisticas',\n  component: EstadisticasView,\n  meta: {\n    requiresAuth: true,\n    title: 'Estadísticas'\n  }\n}];\nconst router = createRouter({\n  history: createWebHistory(import.meta.env.BASE_URL),\n  // \n  routes\n});\n\n// Guard de Navegación mejorado\nrouter.beforeEach((to, from, next) => {\n  const isAuthenticated = localStorage.getItem('currentUser');\n  const requiresAuth = to.matched.some(record => record.meta.requiresAuth);\n  const guestOnly = to.matched.some(record => record.meta.guestOnly);\n\n  // Actualizar el título de la página\n  document.title = to.meta.title ? `${to.meta.title} | MiApp` : 'MiApp';\n  if (requiresAuth && !isAuthenticated) {\n    next('/login');\n  } else if (guestOnly && isAuthenticated) {\n    next('/dashboard'); // Redirige a dashboard si está autenticado y trata de acceder a login/register\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","LoginView","RegisterView","DashboardView","RegistroProducto","ProducerView","EstadisticasView","ProductoresDashboard","routes","path","redirect","name","component","meta","title","guestOnly","requiresAuth","router","history","import","env","BASE_URL","beforeEach","to","from","next","isAuthenticated","localStorage","getItem","matched","some","record","document"],"sources":["C:/Users/Henry/Desktop/GreenlogistApps-main/GreenlogistApps-main/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router';\nimport LoginView from '@/views/LoginView.vue'; // \nimport RegisterView from '@/views/RegisterView.vue';\nimport DashboardView from '@/views/DashboardView.vue';\nimport RegistroProducto from '@/views/RegistroProducto.vue';\nimport ProducerView from '@/views/perfil.vue'; //\nimport EstadisticasView from '@/views/estadisticas.vue'; //\nimport ProductoresDashboard from '@/views/ProductoresDashboard.vue';\n\nconst routes = [\n  {\n    path: '/',\n    redirect: '/login',\n  },\n  {\n    path: '/login',\n    name: 'Login',\n    component: LoginView,\n    meta: {\n      title: 'Iniciar Sesión',\n      guestOnly: true // Nueva meta para rutas que no deben mostrarse cuando hay sesión\n    }\n  },\n  {\n    path: '/register',\n    name: 'Register',\n    component: RegisterView,\n    meta: {\n      title: 'Registro',\n      guestOnly: true\n    }\n  },\n  {\n    path: '/dashboard',\n    name: 'Dashboard',\n    component: DashboardView,\n    meta: {\n      requiresAuth: true,\n      title: 'Panel Principal'\n    }\n  },\n  {\n    path: '/registrar-producto',\n    name: 'RegistroProducto',\n    component: RegistroProducto,\n    meta: {\n      requiresAuth: true,\n      title: 'Registrar Producto'\n    }\n  },\n  {\n    path: '/productoresdashboard',\n    name: 'ProductoresDashboard',\n    component: ProductoresDashboard,\n    meta: {\n      requiresAuth: true,\n      title: 'Panel de Productores'\n    }\n  },\n  {\n    path: '/producer',\n    name: 'Producer',\n    component: ProducerView,\n    meta: {\n      requiresAuth: true,\n      title: 'Perfil del Productor'\n    }\n  },\n  {\n    path: '/panel-estadisticas',\n    name: 'Estadisticas',\n    component: EstadisticasView,\n    meta: {\n      requiresAuth: true,\n      title: 'Estadísticas'\n    }\n  },\n];\n\nconst router = createRouter({\n  history: createWebHistory(import.meta.env.BASE_URL), // \n  routes,\n});\n\n// Guard de Navegación mejorado\nrouter.beforeEach((to, from, next) => {\n  const isAuthenticated = localStorage.getItem('currentUser');\n  const requiresAuth = to.matched.some(record => record.meta.requiresAuth);\n  const guestOnly = to.matched.some(record => record.meta.guestOnly);\n\n  // Actualizar el título de la página\n  document.title = to.meta.title ? `${to.meta.title} | MiApp` : 'MiApp';\n\n  if (requiresAuth && !isAuthenticated) {\n    next('/login');\n  } else if (guestOnly && isAuthenticated) {\n    next('/dashboard'); // Redirige a dashboard si está autenticado y trata de acceder a login/register\n  } else {\n    next();\n  }\n});\n\nexport default router;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}