{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport AppNotification from './AppNotification.vue';\nexport default {\n  name: 'NotificationContainer',\n  components: {\n    AppNotification\n  },\n  data() {\n    return {\n      notifications: []\n    };\n  },\n  methods: {\n    addNotification(type, message) {\n      const id = Date.now();\n      this.notifications.push({\n        id,\n        type,\n        message\n      });\n\n      // Eliminar automáticamente después de 5 segundos\n      setTimeout(() => {\n        this.removeNotification(id);\n      }, 5000);\n    },\n    removeNotification(id) {\n      this.notifications = this.notifications.filter(notification => notification.id !== id);\n    }\n  }\n};","map":{"version":3,"names":["AppNotification","name","components","data","notifications","methods","addNotification","type","message","id","Date","now","push","setTimeout","removeNotification","filter","notification"],"sources":["C:\\Users\\Henry\\Desktop\\GreenlogistApps-main\\GreenlogistApps-main\\src\\components\\NotificationContainer.vue"],"sourcesContent":["<template>\n  <div class=\"notification-container\">\n    <AppNotification\n      v-for=\"notification in notifications\"\n      :key=\"notification.id\"\n      :type=\"notification.type\"\n      :message=\"notification.message\"\n      @dismiss=\"removeNotification(notification.id)\"\n    />\n  </div>\n</template>\n\n<script>\nimport AppNotification from './AppNotification.vue'\n\nexport default {\n  name: 'NotificationContainer',\n  components: {\n    AppNotification\n  },\n  data() {\n    return {\n      notifications: []\n    }\n  },\n  methods: {\n    addNotification(type, message) {\n      const id = Date.now()\n      this.notifications.push({\n        id,\n        type,\n        message\n      })\n      \n      // Eliminar automáticamente después de 5 segundos\n      setTimeout(() => {\n        this.removeNotification(id)\n      }, 5000)\n    },\n    removeNotification(id) {\n      this.notifications = this.notifications.filter(\n        notification => notification.id !== id\n      )\n    }\n  }\n}\n</script>\n\n<style scoped>\n.notification-container {\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  z-index: 1000;\n  display: flex;\n  flex-direction: column;\n}\n</style>"],"mappings":";;;AAaA,OAAOA,eAAc,MAAO,uBAAsB;AAElD,eAAe;EACbC,IAAI,EAAE,uBAAuB;EAC7BC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE;IACjB;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,eAAeA,CAACC,IAAI,EAAEC,OAAO,EAAE;MAC7B,MAAMC,EAAC,GAAIC,IAAI,CAACC,GAAG,CAAC;MACpB,IAAI,CAACP,aAAa,CAACQ,IAAI,CAAC;QACtBH,EAAE;QACFF,IAAI;QACJC;MACF,CAAC;;MAED;MACAK,UAAU,CAAC,MAAM;QACf,IAAI,CAACC,kBAAkB,CAACL,EAAE;MAC5B,CAAC,EAAE,IAAI;IACT,CAAC;IACDK,kBAAkBA,CAACL,EAAE,EAAE;MACrB,IAAI,CAACL,aAAY,GAAI,IAAI,CAACA,aAAa,CAACW,MAAM,CAC5CC,YAAW,IAAKA,YAAY,CAACP,EAAC,KAAMA,EACtC;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}