{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport { ref } from 'vue';\nimport BaseNotification from './BaseNotification.vue';\nexport default {\n  name: 'NotificationContainer',\n  components: {\n    BaseNotification\n  },\n  setup() {\n    const notifications = ref([]);\n    const addNotification = (type, message) => {\n      const id = Date.now();\n      notifications.value.push({\n        id,\n        type,\n        message\n      });\n      setTimeout(() => {\n        removeNotification(id);\n      }, 5000);\n    };\n    const removeNotification = id => {\n      notifications.value = notifications.value.filter(n => n.id !== id);\n    };\n    return {\n      notifications,\n      addNotification,\n      removeNotification\n    };\n  }\n};","map":{"version":3,"names":["ref","BaseNotification","name","components","setup","notifications","addNotification","type","message","id","Date","now","value","push","setTimeout","removeNotification","filter","n"],"sources":["C:\\Users\\Henry\\Desktop\\GreenlogistApps-main\\GreenlogistApps-main\\src\\components\\NotificationContainer.vue"],"sourcesContent":["<template>\n  <div class=\"notification-container\">\n    <BaseNotification\n      v-for=\"notification in notifications\"\n      :key=\"notification.id\"\n      :type=\"notification.type\"\n      :message=\"notification.message\"\n      @dismiss=\"removeNotification(notification.id)\"\n    />\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue'\nimport BaseNotification from './BaseNotification.vue'\n\nexport default {\n  name: 'NotificationContainer',\n  components: {\n    BaseNotification\n  },\n  setup() {\n    const notifications = ref([])\n\n    const addNotification = (type, message) => {\n      const id = Date.now()\n      notifications.value.push({ id, type, message })\n      \n      setTimeout(() => {\n        removeNotification(id)\n      }, 5000)\n    }\n\n    const removeNotification = (id) => {\n      notifications.value = notifications.value.filter(n => n.id !== id)\n    }\n\n    return {\n      notifications,\n      addNotification,\n      removeNotification\n    }\n  }\n}\n</script>\n\n<style scoped>\n.notification-container {\n  position: fixed;\n  top: 1rem;\n  right: 1rem;\n  z-index: 1000;\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n}\n</style>"],"mappings":";;;AAaA,SAASA,GAAE,QAAS,KAAI;AACxB,OAAOC,gBAAe,MAAO,wBAAuB;AAEpD,eAAe;EACbC,IAAI,EAAE,uBAAuB;EAC7BC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,KAAKA,CAAA,EAAG;IACN,MAAMC,aAAY,GAAIL,GAAG,CAAC,EAAE;IAE5B,MAAMM,eAAc,GAAIA,CAACC,IAAI,EAAEC,OAAO,KAAK;MACzC,MAAMC,EAAC,GAAIC,IAAI,CAACC,GAAG,CAAC;MACpBN,aAAa,CAACO,KAAK,CAACC,IAAI,CAAC;QAAEJ,EAAE;QAAEF,IAAI;QAAEC;MAAQ,CAAC;MAE9CM,UAAU,CAAC,MAAM;QACfC,kBAAkB,CAACN,EAAE;MACvB,CAAC,EAAE,IAAI;IACT;IAEA,MAAMM,kBAAiB,GAAKN,EAAE,IAAK;MACjCJ,aAAa,CAACO,KAAI,GAAIP,aAAa,CAACO,KAAK,CAACI,MAAM,CAACC,CAAA,IAAKA,CAAC,CAACR,EAAC,KAAMA,EAAE;IACnE;IAEA,OAAO;MACLJ,aAAa;MACbC,eAAe;MACfS;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}